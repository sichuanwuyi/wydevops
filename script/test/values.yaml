image:
  registry: 
params: 
  deployment0:
    resources:
      limits:
        cpu: "1000m"
        memory: "1Gi"
      requests:
        cpu: "500m"
        memory: "500Mi"
    mysql:
      active: true
      host: 192.168.31.214
      password: 123456
      port: 3307
      username: root
    redis:
      host: 192.168.31.214
      password: 123456
      port: 6379
      timeout: 10000
deployment0: 
  name: devops-test
  #指明引用的外部Chart镜像名称。如果是带路径的名称，则直接使用，否则会尝试从Chart仓库拉取镜像。
  #这个参数主要用来支持单pod多服务的Chart打包方式。wydevops会将外部chart镜像中deployment[0]的
  #initialContainers和containers合并到当前chart中。
  #默认情况下应设置为空。
  refExternalChart: ./temp/atom-hardware-manager-2.0.7.tgz
  #配置chart镜像中需要发布的服务的类型：Deployment、DaemonSet、StatefulSet。
  kind: Deployment
  replicaCount: 1
  priorityClassName: 
  imagePullSecrets: []
  serviceAccount:
    create: true
    annotations: {}
    name: ""
  podSecurityContext: {}
  securityContext: {}
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  nodeSelector: 
  tolerations: []
  affinity: {}
  podLabels: {}
  podAnnotations:
    app.kubernetes.io/service-name: "DevOps流程测试项目"
    app.kubernetes.io/service-en-name: "devops test project"
  volumes:
    - name: devops-test-config
      configMap:
        defaultMode: 493
        name: devops-test-configmap
        optional: false
    - name: public-params
      configMap:
        name: public-configs
        optional: true
  #initContainers的第一个容器，其名称默认应该等于服务名称。
    - name: atom-hardware-manager-config
      configMap:
        defaultMode: 493
        name: atom-hardware-manager-configmap
        optional: false
  initContainers:
  #如果没有initContainers配置（即buildType=single），
  #则containers的第一个容器其名称默认应该等于服务名称。
  containers:
    - name: devops-test
      repository: devops-test
      pullPolicy: Always
      tag: 1.0.0
      #容器关联的Service的配置信息，自动生成的，不需要配置，此处申明主要是用来占位
      service: 
        nodePort: 
          name: devops-test
          version: 1.0.0
          ports:
            - name: http-9090
              protocol: TCP
              port: 9090
              targetPort: 9090
              nodePort: 30090
      ports: 
        - name: http
          protocol: TCP
          containerPort: 9090
      #定义环境变量
      #env:
      # - name: SERVICE_PORT
      #   value: "80"
      volumeMounts:
        - name: public-params
          mountPath: /var/config
        - name: devops-test-config
          #mountPath参数的前缀必须与docker.workDir参数一致。
          mountPath: /app/devops-test/config
      resources:
        limits:
          cpu: 500m
          memory: 500Mi
        requests:
          cpu: 500m
          memory: 500Mi
      livenessProbeEnable: true
      livenessProbe:
        initialDelaySeconds: 15
        failureThreshold: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
        httpGet:
          path: /devops/v1/test/health/liveness
          port: 9090
      readinessProbeEnable: true
      readinessProbe:
        initialDelaySeconds: 15
        failureThreshold: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
        httpGet:
          path: /devops/v1/test/health/readiness
          port: 9090
  #定义configmap名称（格式：{服务名称}-configmap）及其包含的文件列表
    - name: atom-hardware-manager
      repository: atom-hardware-manager
      pullPolicy: Always
      tag: 2.0.7
      #容器关联的Service的配置信息，自动生成的，不需要配置，此处申明主要是用来占位
      service: 
        clusterIP: 
          name: atom-hardware-manager
          version: 2.0.7
          ports:
            - name: http-9090
              protocol: TCP
              port: 9090
              targetPort: 9090
            - name: http-9091
              protocol: TCP
              port: 9091
              targetPort: 9091
        nodePort: 
          name: atom-hardware-manager
          version: 2.0.7
          ports:
            - name: http-9092
              protocol: TCP
              port: 9092
              targetPort: 9092
              nodePort: 30092
            - name: http-9093
              protocol: TCP
              port: 9093
              targetPort: 9093
              nodePort: 30093
      ports: 
        - name: http-9090
          protocol: TCP
          containerPort: 9090
        - name: http-9091
          protocol: TCP
          containerPort: 9091
        - name: http-9092
          protocol: TCP
          containerPort: 9092
        - name: http-9093
          protocol: TCP
          containerPort: 9093
      #定义环境变量
      #env:
      # - name: SERVICE_PORT
      #   value: "80"
      volumeMounts:
        - name: public-params
          mountPath: /var/config
        - name: atom-hardware-manager-config
          #mountPath参数的前缀必须与docker.workDir参数一致。
          mountPath: /app/atom-hardware-manager/config
      resources:
        limits:
          cpu: 1000m
          memory: 1Gi
        requests:
          cpu: 500m
          memory: 500Mi
      livenessProbeEnable: true
      livenessProbe:
        initialDelaySeconds: 15
        failureThreshold: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
        httpGet:
          path: /atom/v1/monitor/health/liveness
          port: 9090
      readinessProbeEnable: true
      readinessProbe:
        initialDelaySeconds: 15
        failureThreshold: 10
        periodSeconds: 5
  configMaps:
      #名称必须与volumes中的某个ConfigMap名相同
    - name: devops-test-configmap
      files: ./src/main/resources/config/application.yml,./src/main/resources/config/application-prod.yml
  #网关路由配置
  gatewayRoute:
    type: apisix
    version: v2
    routes:
      - name: devops-test
        #是否使能Websocket功能
        websocket: false
        match:
          hosts: []
          paths: ["/devops/v1/test*"]
        plugins:
          #是否开启跨域
          - name: cors
            enable: true
        backends:
          servicePort: 9090
      - name: atom-hardware-manager
        #是否使能Websocket功能
        websocket: false
        match:
          hosts: []
          paths: ["/atom/v1/monitor*"]
        plugins:
          #是否开启跨域
          - name: cors
            enable: true
        backends:
          servicePort: 9090
